<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="global.sesoc.jazart.dao.ChartMapper">
	<select id="allCount" resultType="Integer">
		select count(*) from songinfo where song_complete = 'y'
	</select>

	<select id="chartAllCount" resultType="Integer">
		select count(*) from
		(select rownum rnum,songnum from songinfo where song_complete = 'y'
		) where rnum
		between
		1 and
		100
	</select>
	<select id="allList" parameterType="map" resultType="SongInfo">
		select *
		from(select rownum rnum,b.* from
		(select * from songinfo 
		where song_complete = 'y'
		order by song_inputdate desc) b)
		where rnum between #{start} and #{end}
	</select>
	<select id="dailyChart" resultType="SongInfo" parameterType="map">
		<!-- select * from (select rownum rnum, b.* from (select info.songnum, 
			info.song_nickname, info.song_picture, info.song_title, info.song_desc, count(slike.like_time) 
			cnt from songinfo info, songlike slike where info.songnum = slike.songnum 
			and slike.like_time between to_date(sysdate-1, 'yy/mm/dd') and to_date(sysdate, 
			'yy/mm/dd') group by info.songnum, info.song_nickname, info.song_picture, 
			info.song_title, info.song_desc order by cnt desc)b)c where rnum between 
			#{start} and #{end} -->
		select * from ( select rownum rnum, b.* from( select
		si.songnum,count(si.song_like),
		si.song_nickname, si.song_picture,
		si.song_title, si.song_desc,si.song_inputdate,
		sum(case
		when
		sl.like_time between
		sysdate-1 and sysdate then 10
		when sl.like_time
		between sysdate-7 and
		sysdate then 3
		when sl.like_time between
		sysdate-14 and sysdate then 1
		else 0 end)
		as test
		from songinfo
		si,songlike sl
		where si.song_complete = 'y' and
		si.songnum =
		sl.songnum(+) group by
		si.songnum,si.song_nickname,si.song_like,si.song_inputdate,
		si.song_picture,
		si.song_title, si.song_desc order by test desc ) b )
		where
		rnum between
		#{start} and #{end}
	</select>
	<select id="realtimeChart" resultType="SongInfo" parameterType="map">
		select * from ( select rownum rnum, b.* from( select
		si.songnum,count(si.song_like),
		si.song_nickname,
		si.song_picture,si.song_inputdate,
		si.song_title, si.song_desc, sum(case
		when sl.like_time between
		(sysdate-5/24) and sysdate then 10 when
		sl.like_time
		between sysdate-1
		and sysdate then 3 when sl.like_time
		between sysdate-7
		and sysdate then
		1 else 0 end) as test from songinfo 
		si,songlike sl where si.song_complete = 'y' and
		si.songnum =
		sl.songnum(+)
		group by
		si.songnum,si.song_nickname,si.song_like,si.song_inputdate,
		si.song_picture,
		si.song_title, si.song_desc order by test desc ) b )
		where
		rnum between
		#{start} and #{end}
	</select>
	<select id="getDay" resultType="String">
		select to_char(sysdate, 'day')
		from dual
	</select>
	<select id="weeklyChart" resultType="SongInfo" parameterType="map">
		select * from ( select rownum rnum, b.* from(select
		si.songnum,count(si.song_like),
		si.song_nickname,
		si.song_picture,si.song_inputdate,
		si.song_title, si.song_desc, sum(case
		when sl.like_time between
		sysdate-7 and sysdate then 10 when
		sl.like_time
		between sysdate-14 and
		sysdate then 3 when sl.like_time
		between
		sysdate-30
		and sysdate then 1
		else 0 end) as test from songinfo
		si,songlike sl where si.song_complete = 'y' and
		si.songnum =
		sl.songnum(+) group by
		si.songnum,si.song_nickname,si.song_like,si.song_inputdate,
		si.song_picture, si.song_title, si.song_desc order by test desc ) b )
		where
		rnum between #{start} and #{end}
	</select>
</mapper>   